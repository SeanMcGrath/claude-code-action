# Docker Compose configuration for GitLab Claude Code Action
version: '3.8'

services:
  # Webhook receiver service
  webhook-receiver:
    build:
      context: ./webhook-receiver
      dockerfile: Dockerfile
    ports:
      - "${WEBHOOK_PORT:-8080}:8080"
    environment:
      # GitLab Configuration
      - GITLAB_URL=${GITLAB_URL}
      - GITLAB_TRIGGER_TOKEN=${GITLAB_TRIGGER_TOKEN}
      - GITLAB_WEBHOOK_SECRET=${GITLAB_WEBHOOK_SECRET:-}
      - PIPELINE_REF=${PIPELINE_REF:-main}
      
      # Claude Configuration
      - TRIGGER_PHRASE=${TRIGGER_PHRASE:-@claude}
      - ASSIGNEE_TRIGGER=${ASSIGNEE_TRIGGER:-}
      - LABEL_TRIGGER=${LABEL_TRIGGER:-claude}
      - BASE_BRANCH=${BASE_BRANCH:-main}
      - BRANCH_PREFIX=${BRANCH_PREFIX:-claude/}
      - MAX_TURNS=${MAX_TURNS:-10}
      - TIMEOUT_MINUTES=${TIMEOUT_MINUTES:-30}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-5-sonnet-20241022}
      
      # AI Provider Configuration
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - USE_BEDROCK=${USE_BEDROCK:-false}
      - USE_VERTEX=${USE_VERTEX:-false}
      
      # Optional Configuration
      - CUSTOM_INSTRUCTIONS=${CUSTOM_INSTRUCTIONS:-}
      - ALLOWED_TOOLS=${ALLOWED_TOOLS:-}
      - DISALLOWED_TOOLS=${DISALLOWED_TOOLS:-}
      
      # Server Configuration
      - PORT=8080
      - NODE_ENV=${NODE_ENV:-production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000}
    
    volumes:
      - ./logs:/app/logs
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    networks:
      - claude-network

  # Optional: Redis for caching/session storage
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - claude-network
    profiles:
      - redis

  # Optional: PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-claude_gitlab}
      - POSTGRES_USER=${POSTGRES_USER:-claude}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - claude-network
    profiles:
      - postgres

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - webhook-receiver
    restart: unless-stopped
    networks:
      - claude-network
    profiles:
      - nginx

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  claude-network:
    driver: bridge